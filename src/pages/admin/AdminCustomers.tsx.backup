import React, { useState, useEffect } from 'react';
import { useCustomerStore } from '../../store/customerStore';
import { useAuthStore } from '../../store/authStore';
import { useNavigate } from 'react-router-dom';
import { User, Mail, Phone, MapPin, Calendar, LogOut } from 'lucide-react';

const AdminCustomers: React.FC = () => {
  const { getAllCustomers } = useCustomerStore();
  const logout = useAuthStore((state) => state.logout);
  const navigate = useNavigate();
  const [customers, setCustomers] = useState<any[]>([]);
  const [loading, setLoading] = useState(true);

  // Load customers on component mount
  useEffect(() => {
    try {
      const loadedCustomers = getAllCustomers() || [];
      console.log('🔍 Loaded customers:', loadedCustomers);
      setCustomers(loadedCustomers);
    } catch (error) {
      console.error('Error loading customers:', error);
      setCustomers([]);
    } finally {
      setLoading(false);
    }
  }, [getAllCustomers]);

  const handleLogout = () => {
    logout();
    navigate('/admin-login');
  };

  if (loading) {
    return (
      <div className="min-h-screen bg-gray-50 pt-24 py-8">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="bg-white shadow-sm rounded-lg p-8 text-center">
            <p className="text-gray-500">Loading customers...</p>
          </div>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gray-50 py-8 pt-40">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        {/* Header */}
        <div className="bg-white shadow-sm rounded-lg mb-8">
          <div className="px-6 py-4 border-b border-gray-200 flex justify-between items-center">
            <h1 className="text-2xl font-bold text-gray-900">Customer Management</h1>
            <div className="flex space-x-4">
              <button
                onClick={() => navigate('/admin')}
                className="inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50"
              >
                Back to Products
              </button>
              <button
                onClick={() => navigate('/admin/orders')}
                className="inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50"
              >
                View Orders
              </button>
              <button
                onClick={handleLogout}
                className="inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50"
              >
                <LogOut className="h-5 w-5 mr-2" />
                Logout
              </button>
            </div>
          </div>
        </div>

        {/* Customer Statistics */}
        <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
          <div className="bg-white overflow-hidden shadow rounded-lg">
            <div className="p-5">
              <div className="flex items-center">
                <div className="flex-shrink-0">
                  <User className="h-6 w-6 text-gray-400" />
                </div>
                <div className="ml-5 w-0 flex-1">
                  <dl>
                    <dt className="text-sm font-medium text-gray-500 truncate">Total Customers</dt>
                    <dd className="text-lg font-medium text-gray-900">{customers.length}</dd>
                  </dl>
                </div>
              </div>
            </div>
          </div>

          <div className="bg-white overflow-hidden shadow rounded-lg">
            <div className="p-5">
              <div className="flex items-center">
                <div className="flex-shrink-0">
                  <Mail className="h-6 w-6 text-blue-400" />
                </div>
                <div className="ml-5 w-0 flex-1">
                  <dl>
                    <dt className="text-sm font-medium text-gray-500 truncate">With Email</dt>
                    <dd className="text-lg font-medium text-gray-900">
                      {customers.filter(c => c.email).length}
                    </dd>
                  </dl>
                </div>
              </div>
            </div>
          </div>

          <div className="bg-white overflow-hidden shadow rounded-lg">
            <div className="p-5">
              <div className="flex items-center">
                <div className="flex-shrink-0">
                  <Phone className="h-6 w-6 text-green-400" />
                </div>
                <div className="ml-5 w-0 flex-1">
                  <dl>
                    <dt className="text-sm font-medium text-gray-500 truncate">With Phone</dt>
                    <dd className="text-lg font-medium text-gray-900">
                      {customers.filter(c => c.phone).length}
                    </dd>
                  </dl>
                </div>
              </div>
            </div>
          </div>
        </div>

        {/* Customers List */}
        <div className="bg-white shadow overflow-hidden sm:rounded-md">
          <div className="px-4 py-5 sm:px-6">
            <h3 className="text-lg leading-6 font-medium text-gray-900">All Customers</h3>
            <p className="mt-1 max-w-2xl text-sm text-gray-500">
              Customer information and order history
            </p>
          </div>

          {customers.length === 0 ? (
            <div className="text-center py-12">
              <User className="mx-auto h-12 w-12 text-gray-400" />
              <h3 className="mt-2 text-sm font-medium text-gray-900">No customers yet</h3>
              <p className="mt-1 text-sm text-gray-500">
                Customers will appear here once they place orders
              </p>
            </div>
          ) : (
            <ul role="list" className="divide-y divide-gray-200">
              {customers.map((customer) => (
                <li key={customer.id} className="px-4 py-6 sm:px-6">
                  <div className="flex items-center justify-between">
                    <div className="flex items-center">
                      <div className="flex-shrink-0">
                        <div className="h-10 w-10 rounded-full bg-gray-300 flex items-center justify-center">
                          <User className="h-6 w-6 text-gray-600" />
                        </div>
                      </div>
                      <div className="ml-4">
                        <div className="flex items-center">
                          <p className="text-sm font-medium text-indigo-600">
                            {customer.firstName && customer.lastName
                              ? `${customer.firstName} ${customer.lastName}`
                              : customer.email || 'Unknown Customer'
                            }
                          </p>
                          <span className="ml-2 inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">
                            Customer
                          </span>
                        </div>
                        <p className="text-sm text-gray-500">ID: {customer.id}</p>
                      </div>
                    </div>
                    <div className="flex items-center text-sm text-gray-500">
                      <Calendar className="flex-shrink-0 mr-1.5 h-4 w-4 text-gray-400" />
                      {customer.createdAt ? new Date(customer.createdAt).toLocaleDateString() : 'Unknown'}
                    </div>
                  </div>

                  <div className="mt-4 grid grid-cols-1 sm:grid-cols-2 gap-4">
                    <div className="flex items-center text-sm text-gray-500">
                      <Mail className="flex-shrink-0 mr-2 h-4 w-4 text-gray-400" />
                      <span className="font-medium">Email:</span>
                      <span className="ml-1 text-gray-900">{customer.email || 'N/A'}</span>
                    </div>

                    <div className="flex items-center text-sm text-gray-500">
                      <Phone className="flex-shrink-0 mr-2 h-4 w-4 text-gray-400" />
                      <span className="font-medium">Phone:</span>
                      <span className="ml-1 text-gray-900">{customer.phone || 'N/A'}</span>
                    </div>

                    <div className="flex items-center text-sm text-gray-500 sm:col-span-2">
                      <MapPin className="flex-shrink-0 mr-2 h-4 w-4 text-gray-400" />
                      <span className="font-medium">Address:</span>
                      <span className="ml-1 text-gray-900">
                        {customer.address && customer.city
                          ? `${customer.address}, ${customer.city} ${customer.postalCode || ''}`
                          : 'N/A'
                        }
                      </span>
                    </div>

                    <div className="flex items-center text-sm text-gray-500 sm:col-span-2">
                      <span className="font-medium">Total Orders:</span>
                      <span className="ml-1 text-gray-900">
                        {customer.orders ? customer.orders.length : 0} order(s)
                      </span>
                      <span className="ml-4 text-blue-600 hover:text-blue-800">
                        <a href="/admin/orders" className="underline">View all orders →</a>
                      </span>
                    </div>
                  </div>
                </li>
              ))}
            </ul>
          )}
        </div>
      </div>
    </div>
  );
};

export default AdminCustomers;